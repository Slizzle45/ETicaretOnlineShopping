// <auto-generated />
using System;
using ETicaret.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETicaret.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240103102127_il_ilce_table_add")]
    partial class ililcetableadd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Ilceler", b =>
                {
                    b.Property<int>("IlceKodu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlceKodu"));

                    b.Property<int>("IlKodu")
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IlceKodu");

                    b.HasIndex("IlKodu");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Iller", b =>
                {
                    b.Property<int>("IlKodu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlKodu"));

                    b.Property<string>("IlAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IlKodu");

                    b.ToTable("Iller");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kategoriler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Urunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("UrunFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunStok")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Ilceler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Iller", "Iller")
                        .WithMany("Ilceler")
                        .HasForeignKey("IlKodu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Iller");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Urunler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kategoriler", "Kategoriler")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Iller", b =>
                {
                    b.Navigation("Ilceler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kategoriler", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
